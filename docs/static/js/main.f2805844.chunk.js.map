{"version":3,"sources":["App.tsx","index.tsx"],"names":["StyledAvatar","styled","Avatar","red","Count","div","App","name","date","otherActions","text","actions","defaultTheme","createMuiTheme","React","useState","anchorEl","setAnchorEl","handleClose","StylesProvider","injectFirst","theme","Card","CardHeader","avatar","aria-label","slice","action","length","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","title","subheader","moment","fromNow","CardContent","Menu","keepMounted","open","Boolean","onClose","map","label","handler","MenuItem","key","Typography","variant","color","component","CardActions","disableSpacing","comment","count","retweet","like","share","DATA","Date","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2805844.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { red } from '@material-ui/core/colors';\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport styled, { ThemeProvider } from 'styled-components';\nimport moment from 'moment';\n\ninterface OtherAction {\n  label: string;\n  handler: () => void;\n}\n\ninterface TweetProps {\n  name: string;\n  date: Date;\n  otherActions?: OtherAction[];\n  text: string;\n  actions: {\n    comment?: {\n      count: number;\n      handler: () => void;\n    };\n    like?: {\n      count: number;\n      handler: () => void;\n    };\n    retweet?: {\n      count: number;\n      handler: () => void;\n    };\n    share?: {\n      count: number;\n      handler: () => void;\n    };\n  };\n}\n\nconst StyledAvatar = styled(Avatar)`\n  background-color: ${red[500]};\n`;\n\nconst Count = styled.div`\n  margin-right: 5px;\n`;\n\nconst App = ({ name, date, otherActions, text, actions }: TweetProps) => {\n  const defaultTheme = createMuiTheme();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={defaultTheme}>\n        <Card>\n          <CardHeader\n            avatar={\n              <StyledAvatar aria-label=\"recipe\">\n                {name.slice(0, 1)}\n              </StyledAvatar>\n            }\n            action={\n              otherActions &&\n              otherActions.length > 0 && (\n                <IconButton\n                  aria-label=\"other-actions\"\n                  aria-controls=\"simple-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <ExpandMoreIcon />\n                </IconButton>\n              )\n            }\n            title={name}\n            subheader={moment(date).fromNow()}\n          />\n          <CardContent>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {otherActions &&\n                otherActions.map(({ label, handler }) => (\n                  <MenuItem\n                    key={label}\n                    onClick={() => {\n                      handler();\n                      handleClose();\n                    }}\n                  >\n                    {label}\n                  </MenuItem>\n                ))}\n            </Menu>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {text}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            {actions.comment && (\n              <>\n                <IconButton\n                  aria-label=\"comment\"\n                  onClick={actions.comment.handler}\n                >\n                  <ModeCommentOutlinedIcon />\n                </IconButton>\n                {actions.comment.count > 0 && (\n                  <Count>{actions.comment.count}</Count>\n                )}\n              </>\n            )}\n            {actions.retweet && (\n              <>\n                <IconButton\n                  aria-label=\"retweet\"\n                  onClick={actions.retweet.handler}\n                >\n                  <RepeatOutlinedIcon />\n                </IconButton>\n                {actions.retweet.count > 0 && (\n                  <Count>{actions.retweet.count}</Count>\n                )}{' '}\n              </>\n            )}\n            {actions.like && (\n              <>\n                <IconButton\n                  aria-label=\"add to favorites\"\n                  onClick={actions.like.handler}\n                >\n                  <FavoriteBorderOutlinedIcon />\n                </IconButton>\n                {actions.like.count > 0 && <Count>{actions.like.count}</Count>}{' '}\n              </>\n            )}\n            {actions.share && (\n              <>\n                <IconButton aria-label=\"share\" onClick={actions.share.handler}>\n                  <ShareOutlinedIcon />\n                </IconButton>\n                {actions.share.count > 0 && (\n                  <Count>{actions.share.count}</Count>\n                )}{' '}\n              </>\n            )}\n          </CardActions>\n        </Card>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\n\nimport App from './App';\n\nconst DATA = {\n  name: 'ossan-engineer',\n  date: new Date(),\n  otherActions: [\n    { label: 'Item1', handler: () => console.log('Item1') },\n    { label: 'Item2', handler: () => console.log('Item2') },\n    { label: 'Item3', handler: () => console.log('Item3') },\n  ],\n  text:\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n  actions: {\n    comment: {\n      count: 2,\n      handler: () => console.log('comment'),\n    },\n    retweet: {\n      count: 1,\n      handler: () => console.log('retweet'),\n    },\n    like: {\n      count: 13,\n      handler: () => console.log('like'),\n    },\n    share: {\n      count: 0,\n      handler: () => console.log('share'),\n    },\n  },\n};\n\nReactDOM.render(<App {...DATA} />, document.getElementById('root'));\n"],"sourceRoot":""}